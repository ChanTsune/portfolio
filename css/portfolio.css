/*メイン画像*/
/*
* { 
    margin: 0px; 
    padding: 0px; 
}
.mainimg {親div
    position: relative;相対配置
}
.mainimg p {
    position: absolute;絶対配置
    color: #ff0000;文字は白に
    top: 0;
    left: 0;
}
.mainimg img {
    width: 100%;
    height: auto;
    margin: 0%;
    border: 0%;
    padding: 0%;
}
*/

@charset "utf-8";

* { 
    margin: 0px; 
    padding: 0px; 
}
strong{
  color:#0481A2;
}


.contents{
  background-color: #00000009;
  color: #000000;
  padding:10px 20px;
  display: inline-block;
  text-decoration: none; 
  outline: none;
}
.contentspic{
  width: 100%;
  height: auto;
}

.piccontents {
  display: flex;
  flex-wrap: wrap;
}
.item {
  /*width: calc(90% / 2);*/
  width: 350px;
  padding: 20px 10px;
}


.btnright{
  text-align: center;
}

a.btn_03 {
	display: block;
	text-align: center;
	text-decoration: none;
  margin-left: auto;
	width: 120px;
  margin-right: 10px;
	padding: 1rem 4rem;
	font-weight: bold;
	border: 2px solid #27acd9;
	color: #27acd9;
	border-radius: 100vh;
	transition: 0.5s;
}
a.btn_03:hover {
	color: #fff;
	background: #27acd9;
}




/*スクロールダウン全体の場所*/
.scrolldown4{
    /*描画位置*/
  position:absolute;
  bottom:1%;
  right:50%;
    /*矢印の動き1秒かけて永遠にループ*/
  animation: arrowmove 1s ease-in-out infinite;
}

/*下からの距離が変化して全体が下→上→下に動く*/
@keyframes arrowmove{
      0%{bottom:1%;}
      50%{bottom:3%;}
     100%{bottom:1%;}
 }

/*Scrollテキストの描写*/
.scrolldown4 span{
    /*描画位置*/
  position: absolute;
  left:-20px;
  bottom:10px;
    /*テキストの形状*/
  color: #eee;
  font-size: 0.7rem;
  letter-spacing: 0.05em;
  /*縦書き設定*/
  -ms-writing-mode: tb-rl;
    -webkit-writing-mode: vertical-rl;
    writing-mode: vertical-rl;
}

/* 矢印の描写 */
.scrolldown4:before {
    content: "";
    /*描画位置*/
    position: absolute;
    bottom: 0;
    right: -6px;
    /*矢印の形状*/
    width: 1px;
    height: 20px;
    background: #eee;
    transform: skewX(-31deg);
}

.scrolldown4:after{
  content:"";
    /*描画位置*/
  position: absolute;
  bottom:0;
  right:0;
    /*矢印の形状*/
  width:1px;
  height: 50px;
  background:#eee;
}



#header h1{
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translateY(-50%) translateX(-50%);
    color:#eee;
    text-shadow: 0 0 15px #666;
    text-align: center;
  }
  
  #header{
    width:100%;
    height: 100vh;
    position: relative;
  } 
  
  #header:before{
    content: '';
    position:fixed;
    top:0;
    left:0;
    z-index:-1;
    width:100%;
    height: 120vh;
    /*背景画像設定*/
    background:url("../img/kitaku.png") no-repeat center;
    background-size:cover;
  }
  
  #container{
    position: relative;
    z-index:1;
    background:#eee;
    padding:30px 50px 50px 50px;
  }
  
  @media screen and (max-width:768px){
  
      #header,
      #header:before{
    height: 90vh;    
      }
      
  }



/*メニューバー*/
nav{
    position: fixed;
    width: 100%;
    top: 0;
    z-index: 10000;
  }
ul{
    display: table;
    margin: 0 auto;
    padding: 0;
    width: 80%;
    text-align: center;
}
ul li{
    display: table-cell;
    min-width: 50px;
}
ul li a{
    display: block;
    width: 100%;
    padding: 10px 0;
    text-decoration: none;
    color: #ccc;
    font-weight: bold;
    position: relative;
}
ul li.current{
    border: 3px solid #555;
}
ul li.current a{
    color: #555;
}
ul li a:hover{
    color: #000000;
}
/*
.gnavi li.current a,
.gnavi li a:hover{
  color:#0481A2;
}
*/
.gnavi li a::after {
    content: '';
    /*絶対配置で線の位置を決める*/
    position: absolute;
    bottom: 0;
    left: 10%;
    /*線の形状*/
    width: 80%;
    height: 2px;
    background:#0481A2;
    /*アニメーションの指定*/
    transition: all .3s;
    transform: scale(0, 1);/*X方向0、Y方向1*/
    transform-origin: center top;/*上部中央基点*/
}

/*現在地とhoverの設定*/
.gnavi li.current a::after,
.gnavi li a:hover::after {
    transform: scale(1, 1);/*X方向にスケール拡大*/
}


/*==================================================
背景色が伸びて出現
===================================*/

/*全共通*/
.bgextend{
  animation-name:bgextendAnimeBase;
  animation-duration:1s;
  animation-fill-mode:forwards;
  position: relative;
  overflow: hidden;/*　はみ出た色要素を隠す　*/
  opacity:0;
}
@keyframes bgextendAnimeBase{
  from {
    opacity:0;
  }

  to {
    opacity:1;  
}
}
/*中の要素*/
.bgappear{
  animation-name:bgextendAnimeSecond;
  animation-duration:1s;
  animation-delay: 0.6s;
  animation-fill-mode:forwards;
  opacity: 0;
}
@keyframes bgextendAnimeSecond{
  0% {
  opacity: 0;
  }
  100% {
  opacity: 1;
}
}
/*左から右*/
.bgLRextend::before{
  animation-name:bgLRextendAnime;
  animation-duration:1s;
  animation-fill-mode:forwards;
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: #666;/*伸びる背景色の設定*/
}
@keyframes bgLRextendAnime{
  0% {
    transform-origin:left;
    transform:scaleX(0);
  }
  50% {
    transform-origin:left;
    transform:scaleX(1);
  }
  50.001% {
    transform-origin:right;
  }
  100% {
    transform-origin:right;
    transform:scaleX(0);
  }
}
/* スクロールをしたら出現する要素にはじめに透過0を指定　*/
.bgappearTrigger,
.bgLRextendTrigger{
    opacity: 0;
}



/*========= 流れるテキスト ===============*/
/*全共通*/
.slide-in {
  overflow: hidden;
    display: inline-block;
}
.slide-in_inner {
  display: inline-block;

}
/*左右のアニメーション*/
.leftAnime{
    opacity: 0;/*事前に透過0にして消しておく*/
}
.slideAnimeLeftRight {
  animation-name:slideTextX100;
  animation-duration:0.8s;
  animation-fill-mode:forwards;
    opacity: 0;
}
@keyframes slideTextX100 {
  from {
  transform: translateX(-100%); /*要素を左の枠外に移動*/
        opacity: 0;
  }

  to {
  transform: translateX(0);/*要素を元の位置に移動*/
    opacity: 1;
  }
}
.slideAnimeRightLeft {
  animation-name:slideTextX-100;
  animation-duration:0.8s;
  animation-fill-mode:forwards;
    opacity: 0;
}
@keyframes slideTextX-100 {
  from {
  transform: translateX(100%);/*要素を右の枠外に移動*/
    opacity: 0;
  }
  to {
  transform: translateX(0);/*要素を元の位置に移動*/
    opacity: 1;
  }
}